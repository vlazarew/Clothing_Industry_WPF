<Window x:Class="Clothing_Industry_WPF.Примерки.FittingRecordWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Clothing_Industry_WPF.Примерки"
        xmlns:validators="clr-namespace:Clothing_Industry_WPF.Общее.Работа_с_формами"
        xmlns:validators1="clr-namespace:Clothing_Industry_WPF.Примерки"
        ResizeMode="NoResize"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        Title="Примерки" Height="238.113" Width="436.755">
    <Window.Resources>
        <validators1:Fitting x:Key="Fitting"/>

        <GradientStopCollection x:Key="MyGlassGradientStopsResource">
            <GradientStop Color="WhiteSmoke" Offset="0.2" />
            <GradientStop Color="Transparent" Offset="0.4" />
            <GradientStop Color="WhiteSmoke" Offset="0.5" />
            <GradientStop Color="Transparent" Offset="0.75" />
            <GradientStop Color="WhiteSmoke" Offset="0.9" />
            <GradientStop Color="Transparent" Offset="1" />
        </GradientStopCollection>
        <LinearGradientBrush x:Key="MyGlassBrushResource" StartPoint="0,0" EndPoint="1,1" Opacity="0.75"
    GradientStops="{StaticResource MyGlassGradientStopsResource}" />
        <LinearGradientBrush x:Key="GrayBlueGradientBrush"   
    StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="DarkGray" Offset="0" />

            <GradientStop Color="DarkGray" Offset="1" />
        </LinearGradientBrush>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource ResourceKey=GrayBlueGradientBrush}" />
            <Setter Property="Width" Value="80" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Width="{TemplateBinding Width}"   
      Height="{TemplateBinding Height}" ClipToBounds="True">

                            <!-- Outer Rectangle with rounded corners. -->
                            <Rectangle x:Name="outerRectangle" HorizontalAlignment="Stretch"   
      VerticalAlignment="Stretch" Stroke="{TemplateBinding Background}"   
       StrokeThickness="5" Fill="Transparent" />

                            <!-- Inner Rectangle with rounded corners. -->
                            <Rectangle x:Name="innerRectangle" HorizontalAlignment="Stretch"   
        VerticalAlignment="Stretch" Stroke="Transparent"   
        StrokeThickness="5"   
        Fill="{TemplateBinding Background}" 
      />

                            <!-- Glass Rectangle -->
                            <Rectangle x:Name="glassCube" HorizontalAlignment="Stretch"  
        VerticalAlignment="Stretch"  
        StrokeThickness="2" RadiusX="10" RadiusY="10" Opacity="0"  
        Fill="{StaticResource MyGlassBrushResource}"  
        RenderTransformOrigin="0.5,0.5">
                                <Rectangle.Stroke>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0.0" Color="LightBlue" />
                                            <GradientStop Offset="1.0" Color="Gray" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>

                                <!-- These transforms have no effect as they   
             are declared here.   
             The reason the transforms are included is to be targets   
             for animation (see later). -->
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <RotateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>

                                <!-- A BevelBitmapEffect is applied to give the button a   
               "Beveled" look. -->
                                <Rectangle.BitmapEffect>
                                    <BevelBitmapEffect />
                                </Rectangle.BitmapEffect>
                            </Rectangle>

                            <!-- Present Text of the button. -->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter x:Name="myContentPresenter" VerticalAlignment="Center" Margin="5"   
          Content="{TemplateBinding  Content}" TextBlock.Foreground="Black" />
                            </DockPanel>
                        </Grid>

                        <ControlTemplate.Triggers>

                            <!-- Set properties when mouse pointer is over the button. -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <!-- Below are three property settings that occur when the   
         condition is met (user mouses over button).  -->
                                <!-- Change the color of the outer rectangle when user          mouses over it. -->
                                <Setter Property ="Rectangle.Stroke" TargetName="outerRectangle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <!-- Makes the text slightly blurry as though you were          looking at it through blurry glass. -->
                                <Setter Property="ContentPresenter.BitmapEffect"       TargetName="myContentPresenter">
                                    <Setter.Value>
                                        <BlurBitmapEffect Radius="1" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">

                                <!-- Below are three property settings that occur when the   
         condition is met (user mouses over button).  -->
                                <!-- Change the color of the outer rectangle when user          mouses over it. -->
                                <Setter Property ="Rectangle.Stroke" TargetName="outerRectangle" Value="YellowGreen" />
                                <!-- Makes the text slightly blurry as though you were          looking at it through blurry glass. -->
                                <Setter Property="ContentPresenter.BitmapEffect"       TargetName="myContentPresenter">
                                    <Setter.Value>
                                        <BlurBitmapEffect Radius="1" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <!--Наведение мышкой -->



                            <!--Нажатие кнопки-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    <Grid Margin="0,0,0,5" HorizontalAlignment="Left" Width="680">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="59*"/>
            <ColumnDefinition Width="29*"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="Header" Content="Примерки " HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="10,10,0,0" FontSize="18" Width="221" FontFamily="Arial"/>
        <Label Content="Номер заказа " HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="15,59,0,0" FontSize="14" FontFamily="Arial"/>
        <Label Content="Дата примерки " HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="16,90,0,0" FontSize="14" FontFamily="Arial"/>
        <!-- <Label Content="Время: " HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="10,143,0,0"/>-->
        <Label Content="Заметки " HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="15,124,0,0" FontSize="14" FontFamily="Arial"/>
        <Label Content="Тип примерки " HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="15,155,0,0" FontSize="14" FontFamily="Arial"/>
        <!-- <TextBox x:Name="textBoxTime" HorizontalAlignment="Left" Height="26" Margin="72,143,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="270" TabIndex="4" VerticalContentAlignment="Center" FontSize="14"/> -->
        <TextBox x:Name="textBoxNotes" HorizontalAlignment="Left" Height="26" Margin="155,124,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="230" TabIndex="5" VerticalContentAlignment="Center" FontSize="14" FontFamily="Arial"/>
        <Button x:Name="buttonSaveAndExit" Content="Сохранить и выйти" HorizontalAlignment="Left" Margin="245,10,0,0" VerticalAlignment="Top" Width="140" Height="34" Click="ButtonSaveAndExit_Click" IsDefault="True" FontSize="14"/>
        <ComboBox x:Name="comboBoxTypeOfFitting" HorizontalAlignment="Left" Margin="155,155,0,0" VerticalAlignment="Top" Width="230" Height="26" VerticalContentAlignment="Center" FontSize="14" TabIndex="6" IsEditable="True" ScrollViewer.VerticalScrollBarVisibility="Visible" FontFamily="Arial">
            <ComboBox.Text>
                <Binding Source="{StaticResource Fitting}" Path="typeOfFitting" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="true">
                    <Binding.ValidationRules  >
                        <validators:TextBoxValidator ValidatesOnTargetUpdated="True" MinimumLength="1" ErrorMessage="Тип должен быть заполнен"/>
                    </Binding.ValidationRules>
                </Binding>
            </ComboBox.Text>
        </ComboBox>
        <TextBox x:Name="textBoxOrder" HorizontalAlignment="Left" Height="26" Margin="155,59,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="230" TabIndex="2" VerticalContentAlignment="Center" FontSize="14" FontFamily="Arial">
            <TextBox.Text>
                <Binding Source="{StaticResource Fitting}" Path="orderId" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="true">
                    <Binding.ValidationRules  >
                        <validators:TextBoxValidator ValidatesOnTargetUpdated="True" MinimumLength="1" MinimumValue="1" ErrorMessage="Номер заказа должен быть заполнен"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <DatePicker x:Name="datePickerDate" HorizontalAlignment="Left" Margin="155,90,0,0" VerticalAlignment="Top" Width="230" VerticalContentAlignment="Center" FontSize="14" TabIndex="3" FontFamily="Arial">
            <DatePicker.SelectedDate>
                <Binding Source="{StaticResource Fitting}" Path="date" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="true">
                    <Binding.ValidationRules  >
                        <validators:TextBoxValidator ValidatesOnTargetUpdated="True" MinimumLength="1" ErrorMessage="Дата примерки должна быть заполнена"/>
                    </Binding.ValidationRules>
                </Binding>
            </DatePicker.SelectedDate>
        </DatePicker>

    </Grid>
</Window>
