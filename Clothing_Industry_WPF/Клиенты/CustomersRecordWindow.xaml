<Window x:Class="Clothing_Industry_WPF.Клиенты.CustomersRecordWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:validators="clr-namespace:Clothing_Industry_WPF.Клиенты"
        ResizeMode="NoResize"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        Title="Клиент" Height="589.757" Width="914.5">
    <Window.Resources>
        <validators:Customer x:Key="Customer" lastname="" name="" address="" phoneNumber="" nickname="" size="0"/>
        <GradientStopCollection x:Key="MyGlassGradientStopsResource">
            <GradientStop Color="WhiteSmoke" Offset="0.2" />
            <GradientStop Color="Transparent" Offset="0.4" />
            <GradientStop Color="WhiteSmoke" Offset="0.5" />
            <GradientStop Color="Transparent" Offset="0.75" />
            <GradientStop Color="WhiteSmoke" Offset="0.9" />
            <GradientStop Color="Transparent" Offset="1" />
        </GradientStopCollection>
        <LinearGradientBrush x:Key="MyGlassBrushResource" StartPoint="0,0" EndPoint="1,1" Opacity="0.75"
    GradientStops="{StaticResource MyGlassGradientStopsResource}" />
        <LinearGradientBrush x:Key="GrayBlueGradientBrush"   
    StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="DarkGray" Offset="0" />

            <GradientStop Color="DarkGray" Offset="1" />
        </LinearGradientBrush>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource ResourceKey=GrayBlueGradientBrush}" />
            <Setter Property="Width" Value="80" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Width="{TemplateBinding Width}"   
                              Height="{TemplateBinding Height}" ClipToBounds="True">
                            <!-- Outer Rectangle with rounded corners. -->
                            <Rectangle x:Name="outerRectangle" HorizontalAlignment="Stretch"   
      VerticalAlignment="Stretch" Stroke="{TemplateBinding Background}"   
       StrokeThickness="5" Fill="Transparent" />

                            <!-- Inner Rectangle with rounded corners. -->
                            <Rectangle x:Name="innerRectangle" HorizontalAlignment="Stretch"   
        VerticalAlignment="Stretch" Stroke="Transparent"   
        StrokeThickness="5"   
        Fill="{TemplateBinding Background}" 
      />

                            <!-- Glass Rectangle -->
                            <Rectangle x:Name="glassCube" HorizontalAlignment="Stretch"  
        VerticalAlignment="Stretch"  
        StrokeThickness="2" RadiusX="10" RadiusY="10" Opacity="0"  
        Fill="{StaticResource MyGlassBrushResource}"  
        RenderTransformOrigin="0.5,0.5">
                                <Rectangle.Stroke>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0.0" Color="LightBlue" />
                                            <GradientStop Offset="1.0" Color="Gray" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>

                                <!-- These transforms have no effect as they   
             are declared here.   
             The reason the transforms are included is to be targets   
             for animation (see later). -->
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <RotateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>

                                <!-- A BevelBitmapEffect is applied to give the button a   
               "Beveled" look. -->
                                <Rectangle.BitmapEffect>
                                    <BevelBitmapEffect />
                                </Rectangle.BitmapEffect>
                            </Rectangle>

                            <!-- Present Text of the button. -->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter x:Name="myContentPresenter" VerticalAlignment="Center" Margin="5"   
          Content="{TemplateBinding  Content}" TextBlock.Foreground="Black" />
                            </DockPanel>
                        </Grid>

                        <ControlTemplate.Triggers>

                            <!-- Set properties when mouse pointer is over the button. -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <!-- Below are three property settings that occur when the   
         condition is met (user mouses over button).  -->
                                <!-- Change the color of the outer rectangle when user          mouses over it. -->
                                <Setter Property ="Rectangle.Stroke" TargetName="outerRectangle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <!-- Makes the text slightly blurry as though you were          looking at it through blurry glass. -->
                                <Setter Property="ContentPresenter.BitmapEffect"       TargetName="myContentPresenter">
                                    <Setter.Value>
                                        <BlurBitmapEffect Radius="1" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">

                                <!-- Below are three property settings that occur when the   
         condition is met (user mouses over button).  -->
                                <!-- Change the color of the outer rectangle when user          mouses over it. -->
                                <Setter Property ="Rectangle.Stroke" TargetName="outerRectangle" Value="YellowGreen" />
                                <!-- Makes the text slightly blurry as though you were          looking at it through blurry glass. -->
                                <Setter Property="ContentPresenter.BitmapEffect"       TargetName="myContentPresenter">
                                    <Setter.Value>
                                        <BlurBitmapEffect Radius="1" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <!--Наведение мышкой -->



                            <!--Нажатие кнопки-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>

        <Label x:Name="Header" Content="Клиент " HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="10,10,0,0" FontSize="18" Width="293"/>
        <Label Content="Канал заказа" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="10,462,0,0"/>
        <Label Content="Фамилия" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="10,89,0,0"/>
        <Label Content="Имя" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="10,120,0,0"/>
        <Label Content="Отчество " HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="10,151,0,0"/>
        <Label Content="Обслуживающий сотрудник" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="11,493,0,0"/>
        <Label Content="Телефон" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="10,213,0,0"/>
        <Label Content="Размер" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="10,338,0,0"/>
        <Label Content="Паспортные данные " HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="10,307,0,0"/>
        <Label Content="Заметки " HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="10,400,0,0"/>
        <Label Content="Фото " HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="398,50,0,0" Height="24"/>
        <Label Content="Дата рождения" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="10,275,0,0"/>
        <Label Content="Статус клиента" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="10,431,0,0"/>

        <TextBox x:Name="textBoxLastname" HorizontalAlignment="Left" Height="26" Margin="188,89,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="205" TabIndex="1" VerticalContentAlignment="Center" FontSize="14" TextChanged="TextBox_TextChanged">
            <TextBox.Text>
                <Binding Source="{StaticResource Customer}" Path="lastname" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="true" >
                    <Binding.ValidationRules  >
                        <validators:TextBoxValidator ValidatesOnTargetUpdated="True" MinimumLength="1" ErrorMessage="Фамилия должна быть заполнена"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBox x:Name="textBoxName" HorizontalAlignment="Left" Height="26" Margin="188,120,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="205" TabIndex="2" VerticalContentAlignment="Center" FontSize="14">
            <TextBox.Text>
                <Binding Source="{StaticResource Customer}" Path="name" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="true" >
                    <Binding.ValidationRules  >
                        <validators:TextBoxValidator ValidatesOnTargetUpdated="True" MinimumLength="1" ErrorMessage="Имя должно быть заполнено"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBox x:Name="textBoxPatronymic" HorizontalAlignment="Left" Height="26" Margin="188,151,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="205" TabIndex="3" VerticalContentAlignment="Center" FontSize="14"/>
        <TextBox x:Name="textBoxPhone_Number" HorizontalAlignment="Left" Height="26" Margin="188,213,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="205" TabIndex="5" VerticalContentAlignment="Center" FontSize="14">
            <TextBox.Text>
                <Binding Source="{StaticResource Customer}" Path="phoneNumber" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="true" >
                    <Binding.ValidationRules>
                        <validators:TextBoxValidator ValidatesOnTargetUpdated="True" MinimumLength="1" ErrorMessage="Телефон должен быть заполнен"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBox x:Name="textBoxSize" HorizontalAlignment="Left" Height="26" Margin="188,338,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="205" TabIndex="9" VerticalContentAlignment="Center" FontSize="14">
            <TextBox.Text>
                <Binding Source="{StaticResource Customer}" Path="size" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" >
                    <Binding.ValidationRules  >
                        <validators:TextBoxValidator ValidatesOnTargetUpdated="True" MinimumLength="1" MaximumLength="3" MinimumValue="10" MaximumValue="100" ErrorMessage="Размер должен быть заполнен"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBox x:Name="textBoxPassportData" HorizontalAlignment="Left" Height="26" Margin="188,307,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="205" TabIndex="8" VerticalContentAlignment="Center" FontSize="14"/>
        <TextBox x:Name="textBoxNotes" HorizontalAlignment="Left" Height="26" Margin="188,400,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="205" TabIndex="11" VerticalContentAlignment="Center" FontSize="14"/>
        <DatePicker x:Name="datePickerBirthday" HorizontalAlignment="Left" Margin="188,275,0,0" VerticalAlignment="Top" Width="206" TabIndex="7" VerticalContentAlignment="Center" FontSize="14" CalendarClosed="DateTimePicker_TextChanged" KeyUp="DateTimePicker_TextChanged"/>

        <Image x:Name="imagePhoto" Margin="444,51,46,62" OpacityMask="Black" Cursor="Hand" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center"/>
        <Rectangle  x:Name="Border" Stroke="Black" StrokeThickness="5" StrokeDashArray="1 1" SnapsToDevicePixels="True" Margin="444,51,46,62" MouseLeftButtonDown="ButtonAddPhoto_Click">
            <Rectangle.InputBindings>
                <MouseBinding Gesture="LeftClick" Command="{Binding FooCommand}"/>
            </Rectangle.InputBindings>
        </Rectangle>

        <Button x:Name="buttonAddPhoto" Content="Добавить фото" HorizontalAlignment="Left" Margin="723,504,0,0" VerticalAlignment="Top" Width="131" Height="34" Click="ButtonAddPhoto_Click" TabIndex="15"/>
        <Button x:Name="buttonSaveAndExit" Content="Сохранить и выйти" HorizontalAlignment="Left" Margin="588,10,0,0" VerticalAlignment="Top" Width="131" Height="34" Click="ButtonSaveAndExit_Click" TabIndex="16" IsDefault="True"/>
        <ComboBox x:Name="comboBoxChannel" HorizontalAlignment="Left" Margin="188,462,0,0" VerticalAlignment="Top" Width="205" Height="26" VerticalContentAlignment="Center" FontSize="14" TabIndex="13" RenderTransformOrigin="0.434,-1.231" IsEditable="True" ScrollViewer.VerticalScrollBarVisibility="Visible" KeyUp="ComboBox_TextChanged" DropDownClosed="ComboBox_TextChanged">
            <ComboBox.Text>
                <Binding Source="{StaticResource Customer}" Path="channelName" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="true" IsAsync="False">
                    <Binding.ValidationRules  >
                        <validators:TextBoxValidator ValidatesOnTargetUpdated="True" MinimumLength="1" ErrorMessage="Канал связи должен быть заполнен"/>
                    </Binding.ValidationRules>
                </Binding>
            </ComboBox.Text>
        </ComboBox>
        <ComboBox x:Name="comboBoxEmployee" HorizontalAlignment="Left" Margin="188,493,0,0" VerticalAlignment="Top" Width="206" Height="26" VerticalContentAlignment="Center" FontSize="14" TabIndex="14" IsEditable="True" ScrollViewer.VerticalScrollBarVisibility="Visible" KeyUp="ComboBox_TextChanged" DropDownClosed="ComboBox_TextChanged">
            <ComboBox.Text>
                <Binding Source="{StaticResource Customer}" Path="employeeLogin" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="true" IsAsync="False">
                    <Binding.ValidationRules  >
                        <validators:TextBoxValidator ValidatesOnTargetUpdated="True" MinimumLength="1" ErrorMessage="Обслуживающий сотрудник должен быть заполнен"/>
                    </Binding.ValidationRules>
                </Binding>
            </ComboBox.Text>
        </ComboBox>
        <Label Content="Адрес" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="10,182,0,0"/>
        <TextBox x:Name="textBoxAddress" HorizontalAlignment="Left" Height="26" Margin="188,182,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="205" TabIndex="4" VerticalContentAlignment="Center" FontSize="14">
            <TextBox.Text>
                <Binding Source="{StaticResource Customer}" Path="address" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="true" >
                    <Binding.ValidationRules  >
                        <validators:TextBoxValidator ValidatesOnTargetUpdated="True" MinimumLength="1" ErrorMessage="Адрес должен быть заполнен"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <Label Content="Никнейм" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="10,244,0,0"/>
        <TextBox x:Name="textBoxNickname" HorizontalAlignment="Left" Height="26" Margin="188,244,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="206" TabIndex="6" VerticalContentAlignment="Center" FontSize="14">
            <TextBox.Text>
                <Binding Source="{StaticResource Customer}" Path="nickname" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="true" >
                    <Binding.ValidationRules  >
                        <validators:TextBoxValidator ValidatesOnTargetUpdated="True" MinimumLength="1" ErrorMessage="Никнейм должен быть заполнен"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <Label Content="Параметры" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.974,1" Margin="10,369,0,0"/>
        <TextBox x:Name="textBoxParameters" HorizontalAlignment="Left" Height="26" Margin="188,369,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="205" TabIndex="10" VerticalContentAlignment="Center" FontSize="14">
            <TextBox.Text>
                <Binding Source="{StaticResource Customer}" Path="parameters" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="true" >
                    <Binding.ValidationRules  >
                        <validators:TextBoxValidator ValidatesOnTargetUpdated="True" MinimumLength="1" ErrorMessage="Параметры должны быть заполнены"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <ComboBox x:Name="comboBoxStatus" HorizontalAlignment="Left" Margin="188,431,0,0" VerticalAlignment="Top" Width="205" Height="26" VerticalContentAlignment="Center" FontSize="14" TabIndex="12" IsEditable="True" ScrollViewer.VerticalScrollBarVisibility="Visible" KeyUp="ComboBox_TextChanged" DropDownClosed="ComboBox_TextChanged">
            <ComboBox.Text>
                <Binding Source="{StaticResource Customer}" Path="statusName" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="true" IsAsync="False">
                    <Binding.ValidationRules  >
                        <validators:TextBoxValidator ValidatesOnTargetUpdated="True" MinimumLength="1" ErrorMessage="Статус должен быть заполнен"/>
                    </Binding.ValidationRules>
                </Binding>
            </ComboBox.Text>
        </ComboBox>
        <Label  Content="Обязательные поля помечены (*)" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top"  RenderTransformOrigin="0.974,1" Margin="10,50,0,0" FontSize="12" Height="24"/>
        <Label  Content="*" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top"  RenderTransformOrigin="2.667,1.75" Margin="68,89,0,0" FontSize="12" Height="26"/>
        <Label  Content="*" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top"  RenderTransformOrigin="2.667,1.75" Margin="43,120,0,0" FontSize="12" Height="26"/>
        <Label  Content="*" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top"  RenderTransformOrigin="2.667,1.75" Margin="52,182,0,0" FontSize="12" Height="26"/>
        <Label  Content="*" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top"  RenderTransformOrigin="2.667,1.75" Margin="67,213,0,0" FontSize="12" Height="26"/>
        <Label  Content="*" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top"  RenderTransformOrigin="2.667,1.75" Margin="68,244,0,0" FontSize="12" Height="26"/>
        <Label  Content="*" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top"  RenderTransformOrigin="2.667,1.75" Margin="60,338,0,0" FontSize="12" Height="26"/>
        <Label  Content="*" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top"  RenderTransformOrigin="2.667,1.75" Margin="83,369,0,0" FontSize="12" Height="26"/>
        <Label  Content="*" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top"  RenderTransformOrigin="2.667,1.75" Margin="102,431,0,0" FontSize="12" Height="26"/>
        <Label  Content="*" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top"  RenderTransformOrigin="2.667,1.75" Margin="91,462,0,0" FontSize="12" Height="26"/>
        <Label  Content="*" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top"  RenderTransformOrigin="2.667,1.75" Margin="173,493,0,0" FontSize="12" Height="26"/>
        <Button x:Name="buttonSave" Content="Сохранить" HorizontalAlignment="Left" Margin="444,10,0,0" VerticalAlignment="Top" Width="131" Height="34" TabIndex="16" Click="ButtonSave_Click"/>
        <Button x:Name="buttonExit" Content="Выйти" HorizontalAlignment="Left" Margin="731,10,0,0" VerticalAlignment="Top" Width="131" Height="34" TabIndex="16" IsCancel="True" Click="ButtonExit_Click"/>

    </Grid>
</Window>
