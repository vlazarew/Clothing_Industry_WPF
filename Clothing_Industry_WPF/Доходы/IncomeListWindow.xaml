<Window x:Class="Clothing_Industry_WPF.Доходы.IncomeListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Clothing_Industry_WPF.Доходы"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        Title="Доходы" Loaded="Window_Loaded" Height="529" Width="1067.1" MinWidth="1067.1" MinHeight="529">
    <Window.Resources>
        <Style x:Key="DataGridCentralBoldHeader" TargetType="DataGridColumnHeader">
            <Setter Property="Thumb.HorizontalContentAlignment" Value="Center" />
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <GradientStopCollection x:Key="MyGlassGradientStopsResource">
            <GradientStop Color="WhiteSmoke" Offset="0.2" />
            <GradientStop Color="Transparent" Offset="0.4" />
            <GradientStop Color="WhiteSmoke" Offset="0.5" />
            <GradientStop Color="Transparent" Offset="0.75" />
            <GradientStop Color="WhiteSmoke" Offset="0.9" />
            <GradientStop Color="Transparent" Offset="1" />
        </GradientStopCollection>
        <LinearGradientBrush x:Key="MyGlassBrushResource" StartPoint="0,0" EndPoint="1,1" Opacity="0.75"
    GradientStops="{StaticResource MyGlassGradientStopsResource}" />
        <LinearGradientBrush x:Key="GrayBlueGradientBrush"   
    StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="DarkGray" Offset="0" />

            <GradientStop Color="DarkGray" Offset="1" />
        </LinearGradientBrush>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource ResourceKey=GrayBlueGradientBrush}" />
            <Setter Property="Width" Value="80" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontSize" Value="13" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Width="{TemplateBinding Width}"   
      Height="{TemplateBinding Height}" ClipToBounds="True">

                            <!-- Outer Rectangle with rounded corners. -->
                            <Rectangle x:Name="outerRectangle" HorizontalAlignment="Stretch"   
      VerticalAlignment="Stretch" Stroke="{TemplateBinding Background}"   
       StrokeThickness="5" Fill="Transparent" />

                            <!-- Inner Rectangle with rounded corners. -->
                            <Rectangle x:Name="innerRectangle" HorizontalAlignment="Stretch"   
        VerticalAlignment="Stretch" Stroke="Transparent"   
        StrokeThickness="5"   
        Fill="{TemplateBinding Background}" 
      />

                            <!-- Glass Rectangle -->
                            <Rectangle x:Name="glassCube" HorizontalAlignment="Stretch"  
        VerticalAlignment="Stretch"  
        StrokeThickness="2" RadiusX="10" RadiusY="10" Opacity="0"  
        Fill="{StaticResource MyGlassBrushResource}"  
        RenderTransformOrigin="0.5,0.5">
                                <Rectangle.Stroke>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0.0" Color="LightBlue" />
                                            <GradientStop Offset="1.0" Color="Gray" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>

                                <!-- These transforms have no effect as they   
             are declared here.   
             The reason the transforms are included is to be targets   
             for animation (see later). -->
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <RotateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>

                                <!-- A BevelBitmapEffect is applied to give the button a   
               "Beveled" look. -->
                                <Rectangle.BitmapEffect>
                                    <BevelBitmapEffect />
                                </Rectangle.BitmapEffect>
                            </Rectangle>

                            <!-- Present Text of the button. -->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter x:Name="myContentPresenter" VerticalAlignment="Center" Margin="5"   
          Content="{TemplateBinding  Content}" TextBlock.Foreground="Black" />
                            </DockPanel>
                        </Grid>

                        <ControlTemplate.Triggers>

                            <!-- Set properties when mouse pointer is over the button. -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <!-- Below are three property settings that occur when the   
         condition is met (user mouses over button).  -->
                                <!-- Change the color of the outer rectangle when user          mouses over it. -->
                                <Setter Property ="Rectangle.Stroke" TargetName="outerRectangle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <!-- Makes the text slightly blurry as though you were          looking at it through blurry glass. -->
                                <Setter Property="ContentPresenter.BitmapEffect"       TargetName="myContentPresenter">
                                    <Setter.Value>
                                        <BlurBitmapEffect Radius="1" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">

                                <!-- Below are three property settings that occur when the   
         condition is met (user mouses over button).  -->
                                <!-- Change the color of the outer rectangle when user          mouses over it. -->
                                <Setter Property ="Rectangle.Stroke" TargetName="outerRectangle" Value="YellowGreen" />
                                <!-- Makes the text slightly blurry as though you were          looking at it through blurry glass. -->
                                <Setter Property="ContentPresenter.BitmapEffect"       TargetName="myContentPresenter">
                                    <Setter.Value>
                                        <BlurBitmapEffect Radius="1" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <!--Наведение мышкой -->



                            <!--Нажатие кнопки-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>


        <Grid Grid.Row="0">


            <StackPanel Orientation="Horizontal">


                <Button x:Name ="ButtonClearIncome" Content="Чистый доход" Width="130" RenderTransformOrigin="1.194,0.333" TabIndex="1" IsTabStop="False" Click="ButtonClearIncome_Click" FontSize="14"/>
                <Button x:Name ="ButtonDirtyIncome" Content="Грязный доход" Width="130" RenderTransformOrigin="1.194,0.333" TabIndex="2" IsTabStop="False" Click="ButtonDirtyIncome_Click" FontSize="14"/>
                <Button x:Name ="ButtonPrint" Content="Печать" Width="130" RenderTransformOrigin="1.194,0.333" TabIndex="2" IsTabStop="False" Click="ButtonPrint_Click" FontSize="14"/>
                <Button x:Name="ButtonExit" Content="Выход" Width="130" RenderTransformOrigin="1.194,0.333" TabIndex="6" IsTabStop="False" IsCancel="True" Visibility="Visible" Click="ButtonExit_Click" FontSize="14"/>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="376*"/>
                <ColumnDefinition Width="376*"/>
                <ColumnDefinition Width="207"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Label Content="Прибыль" HorizontalAlignment="Left"  VerticalAlignment="Top" RenderTransformOrigin="-0.193,-0.389" FontSize="14" FontFamily="Arial"/>
                <DataGrid x:Name="incomeGrid" AutoGenerateColumns="False" IsReadOnly="True" ItemsSource="{Binding dataTable}" Margin="0,32,0,0" ColumnHeaderStyle="{StaticResource DataGridCentralBoldHeader}">


                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding id}" ClipboardContentBinding="{x:Null}" Header="ID" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding Count}" ClipboardContentBinding="{x:Null}" Header="Сумма"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
            <Grid Grid.Column="1">
                <DataGrid x:Name="clearincomeGrid" AutoGenerateColumns="False" IsReadOnly="True" ItemsSource="{Binding dataTable}" Margin="0,32,0,0" ColumnHeaderStyle="{StaticResource DataGridCentralBoldHeader}">


                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding id}" ClipboardContentBinding="{x:Null}" Header="ID" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding Count}" ClipboardContentBinding="{x:Null}" Header="Сумма"/>
                    </DataGrid.Columns>
                </DataGrid>

                <Label  x:Name="LabelCosts" Content="Расходы" HorizontalAlignment="Left"  VerticalAlignment="Top" RenderTransformOrigin="-0.193,-0.389" FontSize="14" FontFamily="Arial"/>

            </Grid>
            <Grid Grid.Column="2">
                <Label x:Name="LabelPlus" Content="Прибыль" HorizontalAlignment="Left"  VerticalAlignment="Top" RenderTransformOrigin="-0.193,-0.389" FontSize="14" Height="26" FontFamily="Arial"/>
                <Label x:Name="LabelMinus" Content="Расходы" HorizontalAlignment="Left"  VerticalAlignment="Top" RenderTransformOrigin="-0.193,-0.389" Margin="0,31,0,0" FontSize="14" Height="26" FontFamily="Arial"/>
                <TextBox x:Name="textBoxPlus" HorizontalAlignment="Left" Height="26"  TextWrapping="Wrap"  VerticalAlignment="Top" VerticalContentAlignment="Center" Width="122" Margin="75,0,0,0" FontSize="14" FontFamily="Arial"/>
                <TextBox x:Name="textBoxMinus" HorizontalAlignment="Left" Height="26"  TextWrapping="Wrap"  VerticalAlignment="Top" Width="122" VerticalContentAlignment="Center" RenderTransformOrigin="0.488,1.096" Margin="75,31,0,0" FontSize="14" FontFamily="Arial"/>
                <Label x:Name="LabelCount" Content="Итого" HorizontalAlignment="Left" FontWeight="Bold"  VerticalAlignment="Top" VerticalContentAlignment="Center" RenderTransformOrigin="-0.193,-0.389" Margin="0,62,0,0" FontSize="14" Height="26" FontFamily="Arial"/>
                <TextBox x:Name="textBoxCount" HorizontalAlignment="Left" Height="26"  TextWrapping="Wrap"  VerticalAlignment="Top" VerticalContentAlignment="Center" Width="122" RenderTransformOrigin="0.488,1.096" Margin="75,62,0,0" FontSize="14" FontFamily="Arial"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
