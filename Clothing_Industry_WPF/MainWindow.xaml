<Window x:Class="Clothing_Industry_WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Clothing_Industry_WPF"
        mc:Ignorable="d"
 Title="Учёт швейного производства 'Моя пижама'" Height="850.371" Width="1515.334">
    <Window.Resources>
        <GradientStopCollection x:Key="MyGlassGradientStopsResource">
            <GradientStop Color="WhiteSmoke" Offset="0.2" />
            <GradientStop Color="Transparent" Offset="0.4" />
            <GradientStop Color="WhiteSmoke" Offset="0.5" />
            <GradientStop Color="Transparent" Offset="0.75" />
            <GradientStop Color="WhiteSmoke" Offset="0.9" />
            <GradientStop Color="Transparent" Offset="1" />
        </GradientStopCollection>
        <LinearGradientBrush x:Key="MyGlassBrushResource" StartPoint="0,0" EndPoint="1,1" Opacity="0.75"
    GradientStops="{StaticResource MyGlassGradientStopsResource}" />
        <LinearGradientBrush x:Key="GrayBlueGradientBrush"   
    StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="DarkGray" Offset="0" />
            <GradientStop Color="#CCCCFF" Offset="0.5" />
            <GradientStop Color="DarkGray" Offset="1" />
        </LinearGradientBrush>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource ResourceKey=GrayBlueGradientBrush}" />
            <Setter Property="Width" Value="80" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="FontFamily" Value="Arial" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Width="{TemplateBinding Width}"   
      Height="{TemplateBinding Height}" ClipToBounds="True">

                            <!-- Outer Rectangle with rounded corners. -->
                            <Rectangle x:Name="outerRectangle" HorizontalAlignment="Stretch"   
      VerticalAlignment="Stretch" Stroke="{TemplateBinding Background}"   
      RadiusX="20" RadiusY="20" StrokeThickness="5" Fill="Transparent" />

                            <!-- Inner Rectangle with rounded corners. -->
                            <Rectangle x:Name="innerRectangle" HorizontalAlignment="Stretch"   
        VerticalAlignment="Stretch" Stroke="Transparent"   
        StrokeThickness="20"   
        Fill="{TemplateBinding Background}" RadiusX="20" RadiusY="20"   
      />

                            <!-- Glass Rectangle -->
                            <Rectangle x:Name="glassCube" HorizontalAlignment="Stretch"  
        VerticalAlignment="Stretch"  
        StrokeThickness="2" RadiusX="10" RadiusY="10" Opacity="0"  
        Fill="{StaticResource MyGlassBrushResource}"  
        RenderTransformOrigin="0.5,0.5">
                                <Rectangle.Stroke>
                                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Offset="0.0" Color="LightBlue" />
                                            <GradientStop Offset="1.0" Color="Gray" />
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>

                                <!-- These transforms have no effect as they   
             are declared here.   
             The reason the transforms are included is to be targets   
             for animation (see later). -->
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <RotateTransform />
                                    </TransformGroup>
                                </Rectangle.RenderTransform>

                                <!-- A BevelBitmapEffect is applied to give the button a   
               "Beveled" look. -->
                                <Rectangle.BitmapEffect>
                                    <BevelBitmapEffect />
                                </Rectangle.BitmapEffect>
                            </Rectangle>

                            <!-- Present Text of the button. -->
                            <DockPanel Name="myContentPresenterDockPanel">
                                <ContentPresenter x:Name="myContentPresenter" Margin="20"   
          Content="{TemplateBinding  Content}" TextBlock.Foreground="Black" />
                            </DockPanel>
                        </Grid>

                        <ControlTemplate.Triggers>

                            <!-- Set properties when mouse pointer is over the button. -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <!-- Below are three property settings that occur when the   
         condition is met (user mouses over button).  -->
                                <!-- Change the color of the outer rectangle when user          mouses over it. -->
                                <Setter Property ="Rectangle.Stroke" TargetName="outerRectangle" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <!-- Makes the text slightly blurry as though you were          looking at it through blurry glass. -->
                                <Setter Property="ContentPresenter.BitmapEffect"       TargetName="myContentPresenter">
                                    <Setter.Value>
                                        <BlurBitmapEffect Radius="1" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">

                                <!-- Below are three property settings that occur when the   
         condition is met (user mouses over button).  -->
                                <!-- Change the color of the outer rectangle when user          mouses over it. -->
                                <Setter Property ="Rectangle.Stroke" TargetName="outerRectangle" Value="YellowGreen" />
                                <!-- Makes the text slightly blurry as though you were          looking at it through blurry glass. -->
                                <Setter Property="ContentPresenter.BitmapEffect"       TargetName="myContentPresenter">
                                    <Setter.Value>
                                        <BlurBitmapEffect Radius="1" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>

                            <!--Наведение мышкой -->



                            <!--Нажатие кнопки-->

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid Margin="0,0,-8,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="261*"/>
            <ColumnDefinition Width="1281*"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="1" Height="819" VerticalAlignment="Bottom"  HorizontalAlignment="Left" Width="256">
            <StackPanel Background ="Gray" HorizontalAlignment="Left" Height="734" VerticalAlignment="Top" Width="262" Margin="0,85,-6,0">

            </StackPanel>
            <StackPanel Background ="Beige" Height="85" VerticalAlignment="Top">
                <TextBlock Margin="5" FontSize="20"><Run Text="Добро пожаловать,"/></TextBlock>
                <TextBlock Margin="5" FontSize="20" FontWeight="Bold"><!--надо будет менять--><Run Text="Иванов Иван"/></TextBlock>
            </StackPanel>


            <Button x:Name="ButtonExit" Content="Выйти" HorizontalAlignment="Left" Margin="10,643,0,0" VerticalAlignment="Top" Width="236" Height="61" IsCancel="True" Click="ButtonExit_Click"/>
            <Button Content="О программе" HorizontalAlignment="Left" Margin="10,749,0,0" Width="236" RenderTransformOrigin="3.476,-2.516" Height="60" VerticalAlignment="Top"/>

        </Grid>

        <Grid HorizontalAlignment="Left" Height="819" VerticalAlignment="Top" Width="1258" Grid.Column="2">
            <!-- вместо page2.xaml будут наши гуишки для каждой сущности-->
            <StackPanel Background ="LightGray" Height="736" VerticalAlignment="Top" HorizontalAlignment="Left" Width="233" Margin="0,83,0,0">
                <TextBlock FontSize="24" Margin="5">
                   <Hyperlink NavigateUri="page2.xaml">Клиенты</Hyperlink>
                </TextBlock>
                <TextBlock FontSize="24" Margin="5">
                    <Hyperlink NavigateUri="page2.xaml">Заказы</Hyperlink>
                </TextBlock>
                <TextBlock FontSize="24" Margin="5">
                    <Hyperlink NavigateUri="page2.xaml">Примерки</Hyperlink>
                </TextBlock>
                <TextBlock FontSize="24" Margin="5">
                    <Hyperlink NavigateUri="page2.xaml">Баланс клиентов</Hyperlink>
                </TextBlock>
            </StackPanel>
            <StackPanel Background ="LightGray" Height="736" VerticalAlignment="Top" HorizontalAlignment="Left" Width="251" Margin="238,83,0,0">
                <TextBlock FontSize="21" Margin="5" >
                    <Hyperlink NavigateUri="page2.xaml">Поступление материала</Hyperlink>
                </TextBlock>
                <TextBlock FontSize="24" Margin="5" >
                    <Hyperlink NavigateUri="page2.xaml">Материал/Фурнитура</Hyperlink>
                </TextBlock>
                <TextBlock FontSize="24" Margin="5" >
                    <Hyperlink NavigateUri="page2.xaml">Изделия</Hyperlink>
                </TextBlock>
            </StackPanel>
            <StackPanel Background ="LightGray" Height="736" VerticalAlignment="Top" HorizontalAlignment="Left" Width="251" Margin="494,83,0,0">
                <TextBlock FontSize="24" Margin="5" >
                    <Hyperlink NavigateUri="page2.xaml">Сотрудники</Hyperlink>
                </TextBlock>
                <TextBlock FontSize="24" Margin="5" >
                    <Hyperlink NavigateUri="page2.xaml">Начисление ЗП</Hyperlink>
                </TextBlock>
                <TextBlock FontSize="24" Margin="5" >
                    <Hyperlink NavigateUri="page2.xaml">Отпуска</Hyperlink>
                </TextBlock>
            </StackPanel>
            <StackPanel Background ="YellowGreen" Height="78" VerticalAlignment="Top" HorizontalAlignment="Left" Width="1280" Margin="0,0,-22,0">
                <TextBlock  Text="Меню" FontWeight="Bold" TextAlignment="Center" FontSize="40" Width="231" Height="77" Margin="417,10,433,732"/>
            </StackPanel>
            <StackPanel Background ="LightGray" Height="736" VerticalAlignment="Top" HorizontalAlignment="Left" Width="252" Margin="750,83,0,0">
                <TextBlock FontSize="24" Margin="5" >
                    <Hyperlink NavigateUri="page2.xaml">Состояние склада</Hyperlink>
                </TextBlock>
            </StackPanel>
            <StackPanel Background ="LightGray" Height="736" VerticalAlignment="Top" HorizontalAlignment="Left" Width="251" Margin="1007,83,0,0">
                <TextBlock FontSize="24" Margin="5" >
                    <Hyperlink NavigateUri="page2.xaml">Расходы</Hyperlink>
                </TextBlock>
            </StackPanel>

        </Grid>

    </Grid>
</Window>
